version: "3.9"

services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    deploy:
      replicas: 1
    volumes:
      - '/d/bancodedados/zookeeper/binami/data:/bitnami/zookeeper'
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_CLIENT_PORT: 2181
      TZ: 'America/Sao_Paulo'
    networks:
      - microservice-network      

  kafka:
    image: docker.io/bitnami/kafka:3.5
    ports:
      - "9092:9092"
      - "29092:29092"
    volumes:
      - '/d/bancodedados/kafka/binami/data:/bitnami'
    environment:
      KAFKA_CFG_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      #KAFKA_ENABLE_KRAFT: no
      ALLOW_PLAINTEXT_LISTENER: yes
      #KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:29092,CONTROLLER://:9093
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT ,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT     
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      TZ: 'America/Sao_Paulo'
    networks:
      - microservice-network      

#  kafka:
#    image: 'bitnami/kafka:latest'
#    deploy:
#      replicas: 1
#    ports:
#      - 9092:9092
##    depends_on:
##      - zookeeper
#    environment:
##      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_CFG_LISTENERS: INTERNAL://:29092,OUTSIDE://:9092
#      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,OUTSIDE://localhost:9092
#      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
#      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
#      ALLOW_PLAINTEXT_LISTENER: "yes"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - broker
      - zookeeper
    ports:
      - "8086:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=kafka-test
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    networks:
      - microservice-network    

networks:
  microservice-network:      